// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.26.0
// source: query.sql

package sqlcgen

import (
	"context"
)

const getProject = `-- name: GetProject :one
SELECT pid, title, teamid, basecommit FROM project WHERE pid = ? LIMIT 1
`

func (q *Queries) GetProject(ctx context.Context, pid int64) (Project, error) {
	row := q.db.QueryRowContext(ctx, getProject, pid)
	var i Project
	err := row.Scan(
		&i.Pid,
		&i.Title,
		&i.Teamid,
		&i.Basecommit,
	)
	return i, err
}
