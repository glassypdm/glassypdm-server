CREATE TABLE IF NOT EXISTS block(
    hash TEXT PRIMARY KEY NOT NULL,
    s3key TEXT NOT NULL
);

CREATE TABLE IF NOT EXISTS 'commit'(
    cid INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL,
    projectid INTEGER NOT NULL, userid TEXT NOT NULL,
    comment TEXT NOT NULL,
    numfiles INTEGER NOT NULL,
    cno INTEGER,
    timestamp DATETIME DEFAULT CURRENT_TIMESTAMP NOT NULL
);

CREATE TABLE IF NOT EXISTS file(
    fid INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL,
    pid INTEGER NOT NULL,
    path TEXT NOT NULL
);

CREATE TABLE IF NOT EXISTS filerevision(
    frid INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL,
    fid INTEGER NOT NULL,
    pid INTEGER NOT NULL,
    cid INTEGER NOT NULL,
    hash TEXT NOT NULL,
    size INTEGER NOT NULL,
    frno INTEGER NOT NULL,
    changetype INTEGER NOT NULL
);

CREATE TABLE IF NOT EXISTS project(
    pid INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL,
    title TEXT NOT NULL,
    teamid INTEGER NOT NULL
);

CREATE TABLE IF NOT EXISTS projectpermission(
    userid TEXT NOT NULL,
    projectid INTEGER NOT NULL,
    level INTEGER NOT NULL,
    PRIMARY KEY (userid, projectid)
);

CREATE TABLE IF NOT EXISTS team(
    teamid INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL,
    name TEXT NOT NULL UNIQUE,
    planid INTEGER DEFAULT 0
);

CREATE TABLE IF NOT EXISTS teampermission(
    userid TEXT NOT NULL,
    teamid INTEGER NOT NULL,
    level INTEGER NOT NULL,
    PRIMARY KEY (userid, teamid)
);

CREATE TRIGGER IF NOT EXISTS commitnumber AFTER INSERT ON 'commit' BEGIN
UPDATE 'commit' SET cno = (SELECT COUNT(*) FROM 'commit' WHERE projectid = NEW.projectid) WHERE cid = NEW.cid; END;

CREATE TRIGGER IF NOT EXISTS frnumber AFTER INSERT ON filerevision BEGIN
UPDATE filerevision SET frno = (SELECT COUNT(*) FROM filerevision WHERE fid = NEW.fid) WHERE frid = NEW.frid; END;